{"version":3,"sources":["components/services/auth.service.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["API_URL","register","username","password","axios","post","login","then","response","data","access","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","Tab","React","lazy","SignIn","SignUp","App","useState","undefined","setCurrentUser","useEffect","user","AuthService","fallback","style","height","display","Grid","container","spacing","align","justify","direction","item","CircularProgress","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uGAAA,qBAEMA,EAAU,yCA0BD,KACbC,SAzBe,SAACC,EAAUC,GAAX,OAAwBC,IAAMC,KAAN,UAAcL,EAAd,oBAAyC,CAChFE,WACAC,cAwBAG,MArBY,SAACJ,EAAUC,GAAX,OAAwBC,IACnCC,KADmC,UAC3BL,EAD2B,cACN,CAC5BE,WACAC,aAEDI,MAAK,SAACC,GAKL,OAJIA,EAASC,KAAKC,QAChBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAASC,KAAKC,SAGrDF,EAASC,KAAKC,WAYvBK,OATa,WACbJ,aAAaK,WAAW,SASxBC,eANqB,kBAAMJ,KAAKK,MAAMP,aAAaQ,QAAQ,Y,wJCpBvDC,EAAMC,IAAMC,MAAK,kBAAM,qEACvBC,EAASF,IAAMC,MAAK,kBAAM,8DAC1BE,EAASH,IAAMC,MAAK,kBAAM,qEA6CjBG,EA3CH,WAAO,IAAD,EACsBC,wBAASC,GAD/B,mBACIC,GADJ,WAGhBC,qBAAU,WACR,IAAMC,EAAOC,IAAYd,iBAErBa,GACFF,EAAeE,KAEhB,IAMH,OACE,cAAC,WAAD,CAAUE,SACR,mCACE,qBAAKC,MAAO,CAAEC,OAAQ,OAAQC,QAAS,QAAvC,SACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,MAAM,SACNC,QAAQ,SACRC,UAAU,SALZ,SAOE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,YAXV,SAkBE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,UAAWC,UAAWvB,IAC/C,cAAC,IAAD,CAAOsB,KAAK,QAAQC,UAAW1B,IAC/B,cAAC,IAAD,CAAOyB,KAAK,UAAUC,UAAWtB,UCnC1BuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.77ea078d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'https://productsjwt.azurewebsites.net/';\r\n\r\nconst register = (username, password) => axios.post(`${API_URL}account/register`, {\r\n  username,\r\n  password,\r\n});\r\n\r\nconst login = (username, password) => axios\r\n  .post(`${API_URL}api/token/`, {\r\n    username,\r\n    password,\r\n  })\r\n  .then((response) => {\r\n    if (response.data.access) {\r\n      localStorage.setItem('user', JSON.stringify(response.data.access));\r\n    }\r\n\r\n    return response.data.access;\r\n  });\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nconst getCurrentUser = () => JSON.parse(localStorage.getItem('user'));\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import React, { useState, useEffect, Suspense } from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AuthService from './services/auth.service';\r\n\r\nconst Tab = React.lazy(() => import('./crud/Tab'));\r\nconst SignIn = React.lazy(() => import('./Login'));\r\nconst SignUp = React.lazy(() => import('./Register'));\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={(\r\n      <>\r\n        <div style={{ height: '100%', display: 'flex' }}>\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            align=\"center\"\r\n            justify=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <CircularProgress />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </>\r\n)}\r\n    >\r\n      <Switch>\r\n        <Route exact path={['/', '/login']} component={SignIn} />\r\n        <Route path=\"/user\" component={Tab} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}